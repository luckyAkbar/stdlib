// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/sweet-go/stdlib/http (interfaces: APIResponseGenerator)

// Package http_mock is a generated GoMock package.
package http_mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	echo "github.com/labstack/echo/v4"
	encryption "github.com/sweet-go/stdlib/encryption"
	http "github.com/sweet-go/stdlib/http"
)

// MockAPIResponseGenerator is a mock of APIResponseGenerator interface.
type MockAPIResponseGenerator struct {
	ctrl     *gomock.Controller
	recorder *MockAPIResponseGeneratorMockRecorder
}

// MockAPIResponseGeneratorMockRecorder is the mock recorder for MockAPIResponseGenerator.
type MockAPIResponseGeneratorMockRecorder struct {
	mock *MockAPIResponseGenerator
}

// NewMockAPIResponseGenerator creates a new mock instance.
func NewMockAPIResponseGenerator(ctrl *gomock.Controller) *MockAPIResponseGenerator {
	mock := &MockAPIResponseGenerator{ctrl: ctrl}
	mock.recorder = &MockAPIResponseGeneratorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAPIResponseGenerator) EXPECT() *MockAPIResponseGeneratorMockRecorder {
	return m.recorder
}

// GenerateAPIResponse mocks base method.
func (m *MockAPIResponseGenerator) GenerateAPIResponse(arg0 *http.StandardResponse, arg1 *encryption.SignOpts) (*http.APIResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateAPIResponse", arg0, arg1)
	ret0, _ := ret[0].(*http.APIResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateAPIResponse indicates an expected call of GenerateAPIResponse.
func (mr *MockAPIResponseGeneratorMockRecorder) GenerateAPIResponse(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateAPIResponse", reflect.TypeOf((*MockAPIResponseGenerator)(nil).GenerateAPIResponse), arg0, arg1)
}

// GenerateEchoAPIResponse mocks base method.
func (m *MockAPIResponseGenerator) GenerateEchoAPIResponse(arg0 echo.Context, arg1 *http.StandardResponse, arg2 *encryption.SignOpts) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateEchoAPIResponse", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// GenerateEchoAPIResponse indicates an expected call of GenerateEchoAPIResponse.
func (mr *MockAPIResponseGeneratorMockRecorder) GenerateEchoAPIResponse(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateEchoAPIResponse", reflect.TypeOf((*MockAPIResponseGenerator)(nil).GenerateEchoAPIResponse), arg0, arg1, arg2)
}

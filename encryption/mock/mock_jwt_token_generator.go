// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/sweet-go/stdlib/encryption (interfaces: JWTTokenGenerator)

// Package encryption_mock is a generated GoMock package.
package encryption_mock

import (
	reflect "reflect"

	jwt "github.com/golang-jwt/jwt/v4"
	gomock "github.com/golang/mock/gomock"
	echo "github.com/labstack/echo/v4"
)

// MockJWTTokenGenerator is a mock of JWTTokenGenerator interface.
type MockJWTTokenGenerator struct {
	ctrl     *gomock.Controller
	recorder *MockJWTTokenGeneratorMockRecorder
}

// MockJWTTokenGeneratorMockRecorder is the mock recorder for MockJWTTokenGenerator.
type MockJWTTokenGeneratorMockRecorder struct {
	mock *MockJWTTokenGenerator
}

// NewMockJWTTokenGenerator creates a new mock instance.
func NewMockJWTTokenGenerator(ctrl *gomock.Controller) *MockJWTTokenGenerator {
	mock := &MockJWTTokenGenerator{ctrl: ctrl}
	mock.recorder = &MockJWTTokenGeneratorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockJWTTokenGenerator) EXPECT() *MockJWTTokenGeneratorMockRecorder {
	return m.recorder
}

// BuildEchoJWTMiddleware mocks base method.
func (m *MockJWTTokenGenerator) BuildEchoJWTMiddleware() echo.MiddlewareFunc {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BuildEchoJWTMiddleware")
	ret0, _ := ret[0].(echo.MiddlewareFunc)
	return ret0
}

// BuildEchoJWTMiddleware indicates an expected call of BuildEchoJWTMiddleware.
func (mr *MockJWTTokenGeneratorMockRecorder) BuildEchoJWTMiddleware() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BuildEchoJWTMiddleware", reflect.TypeOf((*MockJWTTokenGenerator)(nil).BuildEchoJWTMiddleware))
}

// GenerateJWTToken mocks base method.
func (m *MockJWTTokenGenerator) GenerateJWTToken(arg0 jwt.Claims) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateJWTToken", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateJWTToken indicates an expected call of GenerateJWTToken.
func (mr *MockJWTTokenGeneratorMockRecorder) GenerateJWTToken(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateJWTToken", reflect.TypeOf((*MockJWTTokenGenerator)(nil).GenerateJWTToken), arg0)
}

// ValidateJWTToken mocks base method.
func (m *MockJWTTokenGenerator) ValidateJWTToken(arg0 string) (*jwt.Token, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateJWTToken", arg0)
	ret0, _ := ret[0].(*jwt.Token)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ValidateJWTToken indicates an expected call of ValidateJWTToken.
func (mr *MockJWTTokenGeneratorMockRecorder) ValidateJWTToken(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateJWTToken", reflect.TypeOf((*MockJWTTokenGenerator)(nil).ValidateJWTToken), arg0)
}
